package com.example.token.issuer.controller;

import com.example.token.issuer.model.TokenRequest;
import com.example.token.issuer.model.TokenResponse;
import com.example.token.issuer.service.TokenIssuerService;
import java.util.UUID;
import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import reactor.core.publisher.Mono;

/**
 * Controller class responsible for handling HTTP requests related to token issuance.
 * This class defines an endpoint for receiving token request data, processing it through the TokenIssuerService,
 * and returning the resulting TokenResponse in a reactive Mono.
 */

@RequiredArgsConstructor
@RestController
public class TokenIssuerController {

  private final TokenIssuerService tokenIssuerService;

  /**
   * Handles HTTP POST requests to the "/token" endpoint for token issuance.
   * Receives a TokenRequest, assigns a unique correlation ID to it, processes the request through
   * the TokenIssuerService, and returns the resulting TokenResponse in a reactive Mono.
   *
   * @param tokenRequest The incoming TokenRequest object.
   * @return A Mono containing the TokenResponse generated by the service.
   */
  @PostMapping("/token")
  public Mono<TokenResponse> getToken(@RequestBody TokenRequest tokenRequest) {
    tokenRequest.setCorrelationId(UUID.randomUUID());
    return tokenIssuerService.process(tokenRequest);
  }

}